https://leetcode.com/problems/majority-element-ii/description/

class Solution {
    Boolean isgreater(int val,int[] nums){
        int count = 0;
        for(int i =0;i<nums.length;i++){
            if(val == nums[i]){
                count++;
            }
        }
        if(count > nums.length/3){
            return true;
        }

        return false;
    }
    public List<Integer> majorityElement(int[] nums) {
        int val1 = nums[0];
        int count1 = 1;
        int val2 = nums[0];
        int count2 = 0;
        int i =1;
        while(i< nums.length){
            if(val1 == nums[i]){
                count1++;
            }else if(val2 == nums[i]){
                count2++;
            }else{
                if(count1 == 0){
                    val1 =nums[i];
                    count1 =1;
                }else if(count2 == 0){
                    val2 = nums[i];
                    count2 = 1;
                }else{
                    count2--;
                    count1--;
                }
            }
            i++;
        }
        ArrayList<Integer> res = new ArrayList<>();
        if(isgreater(val1,nums)){
            res.add(val1);
        }
        if(val1 != val2 && isgreater(val2,nums)){
            res.add(val2);
        }


        return res;
    }
}
